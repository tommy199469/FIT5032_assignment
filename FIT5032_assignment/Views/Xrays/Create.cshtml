@model FIT5032_assignment.Models.Xray

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Xray</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger" id="type-error"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger" id="cost-error"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#form').validate({
                errorClass: 'text-danger',
                errorElement: 'span',
                rules: {
                    'type': {
                        required: true
                    },
                    'cost': {
                        required: true,
                        number: true,
                        min: 100,
                        max: 10000
                    }
                },
                messages: {
                    'type': 'Please enter type',
                    'cost': {
                        required: 'Please enter cost',
                        number: 'Please enter number',
                        min: 'Cost cannot lower than 100',
                        max: 'Cost cannot more than 10000'
                    }
                },
                errorPlacement: function (error, element) {
                    var id = element.attr('id') + '-error';
                    console.log("id", id)
                    error.appendTo('#' + id);
                },
                highlight: function (element) {
                    $(element).closest('.form-group').removeClass('success').addClass('error');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('error').addClass('success');
                }
            });
        });
    </script>
}
